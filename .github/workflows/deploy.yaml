name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      HOST: fizteh-radio@radiomipt.ru
      PORT: 5010
      DEPLOY_DIR: /home/fizteh-radio/online-radio/server
      CONFIG_PATH: /home/fizteh-radio/online-radio/server/prod.yaml
      ENV_FILE_PATH: /home/fizteh-radio/online-radio/server/.env
      FRONTEND_FILES: /home/fizteh-radio/online-radio/client
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup ssh
        run: |
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          sudo chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -p ${{ env.PORT }} ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIR }}"
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Setup environment
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -p ${{ env.PORT }} ${{ env.HOST }} \
          "sudo rm -f ${{ env.ENV_FILE_PATH }} && \
          echo "CONFIG_PATH=${{ env.CONFIG_PATH }}" >> ${{ env.ENV_FILE_PATH }} && \
          echo "SECRET=${{ secrets.SECRET }}" >> ${{ env.ENV_FILE_PATH }} && \
          echo "ROOT_PASS=${{ secrets.ROOT_PASS }}" >> ${{ env.ENV_FILE_PATH }} && \
          export SOURCE_STORAGE=/mnt/base/radio-source && \
          export DB_SQLITE=${{ env.DEPLOY_DIR }}/storage && \
          export FRONTEND_FILES=${{ env.FRONTEND_FILES }}"
      - name: Send compose.yaml
        run: |
          scp -i deploy_key.pem -o StrictHostKeyChecking=no -P ${{ env.PORT }} \
          compose.yaml \
          ${{ env.HOST }}:${{ env.DEPLOY_DIR }}
      - name: Deploy to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no -p ${{ env.PORT }} ${{ env.HOST }} \
          'sudo docker pull --platform linux/arm64/v8 gingld/fizteh-radio && \
          sudo docker stop gingld/fizteh-radio && \
          sudo docker rm gingld/fizteh-radio && \
          cd ${{ env.DEPLOY_DIR }} && \
          sudo docker compose up'
