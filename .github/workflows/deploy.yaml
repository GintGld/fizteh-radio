name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HOST: fizteh-radio@radiomipt.ru -p 5010
      DEPLOY_DIRECTORY: /home/fizteh-radio/online-radio/server
      CONFIG_PATH: /home/fizteh-radio/online-radio/server/prod.yaml
      ENV_FILE_PATH: /home/fizteh-radio/online-radio/server/.env
      FRONTEND_FILES: /home/fizteh-radio/online-radio/client

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | \
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Build and push Docker image
        run: |
          docker build -t radio:latest .
          docker push gingld/fizteh-radio:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup ssh
        run: |
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          sudo chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Setup environment
        run: |
          rm -f ${{ env.ENV_FILE_PATH }} && \
          echo "CONFIG_PATH=${{ env.CONFIG_PATH }}" >> ${{ env.ENV_FILE_PATH }} && \
          echo "SECRET=${{ secrets.SECRET }}" >> ${{ env.ENV_FILE_PATH }} && \
          echo "ROOT_PASS=${{ secrets.ROOT_PASS }}" >> ${{ env.ENV_FILE_PATH }} && \
          export SOURCE_STORAGE=/mnt/base/radio-source && \
          export DB_SQLITE=${{ env.DEPLOY_DIRECTORY }}/storage && \
          export FRONTEND_FILES=${{ env.FRONTEND_FILES }}
      - name: Deploy to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} \
            'sudo docker pull gingld/fizteh-radio && \
            sudo docker stop radio && \
            sudo docker rm radio && \
            cd ${{ env.DEPLOY_DIRECTORY }} && \
            sudo docker compose up'
